import{defineComponent as e,toRefs as t,inject as a,ref as n,computed as o,watch as l,resolveComponent as s,openBlock as r,createBlock as u,mergeProps as d,withModifiers as i,withKeys as p}from"vue";import{conformToMask as m}from"text-mask-core";import{getClipboardDataText as c}from"@smartmed/webpatient-vue-components/domain";import{SELECTION_CHANGE_TOKEN as v}from"@smartmed/webpatient-vue-components/tokens";import f from"@smartmed/webpatient-vue-components/BaseInput";const g=/[ \-_]/g,b="+7 ".length,V={mask:[..."+7 ".split(""),/[1-9]/,/\d/,/\d/," ",/\d/,/\d/,/\d/,"-",/\d/,/\d/,"-",/\d/,/\d/],pipe:e=>""===e?"+7 ":e.replace(/[- ]$/,""),guide:!1};var k=e({inheritAttrs:!1,components:{BaseInput:f},name:"InputPhone",props:{modelValue:{type:String,required:!0},disabled:Boolean},setup(e,{emit:s}){const{modelValue:r,disabled:u}=t(e),d=a(v),i=n(null),p=o((()=>{const e=r.value.replace(/^7/,"")||"+7 ",{conformedValue:t}=m(e,V.mask,{guide:!1});return t.replace(/[- ]$/,"")})),f=o((()=>i.value&&i.value.$refs.native.$refs.native)),k=e=>{s("update:modelValue",e)},h=e=>{const t=r.value.length>1&&r.value.length<11,a=e.replace(g,"").length,n=e.replace(/[^0-9]+/g,""),o=String(getSelection()).length;return t&&0===o?`${r.value}${n}`.slice(0,13):a<10?`7${n}`.slice(0,11):`7${n.replace(/^7|^8/,"")}`.slice(0,11)},$=()=>{(()=>{if(!f.value||!i.value)return!1;const{selectionStart:e,selectionEnd:t}=f.value;return i.value.focused&&null!==e&&e<b&&e===t})()&&f.value&&f.value.setSelectionRange(b,b,"none")};return l(r,(e=>{if(e&&11===e.length&&e.startsWith("8")){const t=h(e);k(t)}}),{immediate:!0}),d&&l(d,(()=>{$()})),{baseInput:i,formattedValue:p,onBackspace:e=>{(e.target.selectionStart||0)<=b&&e.target.selectionStart===e.target.selectionEnd&&e.preventDefault()},onPaste:e=>{if(u.value)return;const t=c(e).replace(/^\+?7|8/,""),a=h(t);k(a)},maskOptions:V,updateValue:k}}});k.render=function(e,t,a,n,o,l){const m=s("base-input");return r(),u(m,d(e.$attrs,{autocomplete:"tel","data-automation-id":"smed-input-phone",ref:"baseInput",type:"tel",name:"tel",modelValue:e.formattedValue,"mask-options":e.maskOptions,disabled:e.disabled,onPaste:i(e.onPaste,["prevent"]),"onUpdate:modelValue":e.updateValue,onKeydown:p(e.onBackspace,["backspace"])}),null,16,["modelValue","mask-options","disabled","onPaste","onUpdate:modelValue","onKeydown"])};export{k as default};
