import{defineComponent as e,computed as t,resolveComponent as o,openBlock as a,createBlock as s,mergeProps as l,withCtx as n,renderSlot as m,createCommentVNode as u}from"vue";import r from"text-mask-addons/dist/createNumberMask";import p from"@smartmed/webpatient-vue-components/BaseInput";import{hasSlotContent as i}from"@smartmed/webpatient-vue-components/domain";var d=e({inheritAttrs:!1,components:{BaseInput:p},name:"NumberInput",props:{modelValue:{type:[Number,null],required:!0}},setup:(e,{emit:o,slots:a})=>({emitValue:e=>{o("update:modelValue",e?parseInt(e):null)},hasLeftSlot:t((()=>a.left&&i(a.left))),hasValueContentSlot:t((()=>a.left&&i(a.valueContent))),hasRightSlot:t((()=>a.left&&i(a.right))),maskOptions:{mask:r({prefix:"",includeThousandsSeparator:!1}),guide:!1}})});d.render=function(e,t,r,p,i,d){const f=o("base-input");return a(),s(f,l(e.$attrs,{type:"text",modelValue:e.modelValue,"mask-options":e.maskOptions,"onUpdate:modelValue":e.emitValue}),{left:n((()=>[e.hasLeftSlot?m(e.$slots,"left",{key:0}):u("",!0)])),valueContent:n((()=>[e.hasValueContentSlot?m(e.$slots,"valueContent",{key:0}):u("",!0)])),right:n((()=>[e.hasRightSlot?m(e.$slots,"right",{key:0}):u("",!0)])),_:3},16,["modelValue","mask-options","onUpdate:modelValue"])};export{d as default};
