"use strict";var e=require("vue"),t=require("text-mask-core"),s=e.defineComponent({name:"MaskedInput",props:{modelValue:{type:[String,Number,Object,null],required:!0},maskOptions:{type:[Object,null],default:null},disabled:Boolean,stringify:{type:Function,default:e=>e}},mounted(){this.maskOptions&&this.initMask()},data:()=>({textMaskInputElement:null}),methods:{initMask(){e.nextTick((()=>{this.setTextMaskInputElement(),this.textMaskInputElement.update(this.modelValue)}))},createTextMaskInputElement:t.createTextMaskInputElement,setTextMaskInputElement(){this.textMaskInputElement=this.createTextMaskInputElement({inputElement:this.$refs.native,mask:this.maskOptions.mask,value:this.modelValue,showMask:!1,guide:this.maskOptions.guide||!1,pipe:this.maskOptions.pipe||(e=>e)})},updateValue(e){this.disabled||(this.maskOptions&&this.textMaskInputElement.update(e),this.$emit("update:modelValue",this.$refs.native.value))},bind(){this.setTextMaskInputElement(),this.updateValue(this.modelValue)}},watch:{maskOptions(e,t){this.maskOptions!==t&&this.bind()}}});const a=["value","disabled"];s.render=function(t,s,n,i,u,l){return e.openBlock(),e.createElementBlock("input",e.mergeProps({ref:"native"},t.$attrs,{value:t.stringify(t.modelValue),disabled:t.disabled,onInput:s[0]||(s[0]=e=>t.updateValue(e.target.value))}),null,16,a)},module.exports=s;
