"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e={mounted(e){e.focus()}},t={beforeMount:(e,t)=>{const n=n=>{e.contains(n.target)||e===n.target||t.value(n)},o="ontouchstart"in document.documentElement?"touchstart":"click";e.__privateClickOutsideHandler=n,document.addEventListener(o,n)},beforeUnmount:e=>{if(e.__privateClickOutsideHandler){const t="ontouchstart"in document.documentElement?"touchstart":"click";document.removeEventListener(t,e.__privateClickOutsideHandler),delete e.__privateClickOutsideHandler}}},n=["touchstart","touchmove","touchend"],o=["mousedown","mousemove","mouseup"],r={beforeMount:(e,{value:t})=>{const r=e=>e instanceof MouseEvent||e.touches.length<2,c=e=>e instanceof MouseEvent?{clientX:e.clientX,clientY:e.clientY}:{clientX:e.touches[0].clientX,clientY:e.touches[0].clientX},s=([n,o,r],c,s)=>{const i=n=>{if(!c(n))return;const i=s(n);let u={x:i.clientX,y:i.clientY};const _=n=>{if(!c(n))return;const o=s(n);t.onEvent(e,[o.clientX-u.x,o.clientY-u.y]),u={x:o.clientX,y:o.clientY}},d=()=>{document.removeEventListener(o,_),document.removeEventListener(r,d),document["__smartmed_dragDrop__"+r]=null,document["__smartmed_dragDrop__"+o]=null};document.removeEventListener(r,d),document.addEventListener(o,_),document.addEventListener(r,d),document["__smartmed_dragDrop__"+r]=d,document["__smartmed_dragDrop__"+o]=_};e.addEventListener(n,i),e[`__smartmed_dragDrop__${n}`]=i};s(n,r,c),s(o,r,c)},beforeUnmount:e=>{[...n,...o].forEach((t=>{const n=document[`__smartmed_dragDrop__${t}`],o=e[`__smartmed_dragDrop__${t}`];n&&document.removeEventListener(t,n),o&&e.removeEventListener(t,o)}))}},c={threshold:1},s={mounted(e,{value:t}){const{onIntersect:n,isObserve:o=!0,disconnectAfterIntersect:r=!0,options:s={}}=t;if(!o)return;e.__observer_intersection=new IntersectionObserver((([t])=>{const{isIntersecting:o}=t;o&&(n(t),r&&e.__observer_intersection.disconnect())}),{...c,...s,root:"function"==typeof s.root?s.root():s.root}),e.__observer_intersection.observe(e)},beforeUnmount(e){e.__observer_intersection&&e.__observer_intersection.disconnect()}};exports.AutoFocusDirective=e,exports.ClickOutsideDirective=t,exports.DragDropDirective=r,exports.IntersectionDirective=s;
